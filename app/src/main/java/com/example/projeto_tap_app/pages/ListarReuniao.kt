package com.example.projeto_tap_app.pagesimport androidx.compose.foundation.BorderStrokeimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.borderimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.PaddingValuesimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.itemsimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material3.Buttonimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.rememberimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.navigation.NavControllerimport com.google.firebase.firestore.FirebaseFirestoreimport com.google.firebase.firestore.QueryDocumentSnapshotimport com.google.firebase.firestore.QuerySnapshot@Composablefun ListarReuniao(db: FirebaseFirestore, navController: NavController, innerPadding: PaddingValues){    var reuniao = remember {  mutableListOf<QueryDocumentSnapshot>() }    var ListarReuniao = ListarReuniaoPage()    remember {        ListarReuniao.listarReuniao(db).addOnSuccessListener {                it -> reuniao.addAll(it.toList())        }    }    Column(        modifier = Modifier.padding(innerPadding)    ) {        Row(            horizontalArrangement = Arrangement.Center,            modifier = Modifier.fillMaxWidth().padding(20.dp)        ) {            Text("Listar Reunioes", fontSize = 25.sp)        }        Spacer(modifier = Modifier.size(20.dp))        Row(            horizontalArrangement = Arrangement.SpaceBetween,            verticalAlignment = Alignment.CenterVertically,            modifier = Modifier.fillMaxWidth().padding(20.dp)        ) {            Column {                Button(onClick = {                    ListarReuniao.listarReuniao(db).addOnSuccessListener {                        it ->                            reuniao.clear()                            reuniao.addAll(it.toList())                    }                }) {                    Text("Atualizar Reunioes")                }            }            Column {                Button(onClick = {                    navController.navigate("/CadastrarReuniao")                }) {                    Text("Cadastrar")                }            }        }        LazyColumn (            modifier = Modifier.fillMaxWidth()        ) {            items(reuniao){                it ->                Row(                    horizontalArrangement = Arrangement.SpaceBetween,                    modifier = Modifier.padding(10.dp)                        .border(border =  BorderStroke(1.dp, Color.Black))                        .padding(10.dp)                        .clickable {                            navController.navigate("/AtualizarReuniao/${it.id}")                        }                        .fillMaxWidth()                ) {                    Column {                        Text(it.get("titulo").toString(), fontWeight = FontWeight.Bold, fontSize = 25.sp)                        Text(it.get("assunto").toString(), fontSize = 25.sp)                    }                    Column {                        Text(it.get("data").toString(), fontSize = 25.sp)                    }                }            }        }    }}